<?xml version="1.0" encoding="utf-8"?>
<root id="exampleDocument">
	<stml version="1.0"/>
	
	<header>
		<title>Example Document</title>
		<description>This is an example STML-document to demonstrate how ScreenTexter works.</description>
		<language>en</language>
		<author>A clever Animetra employee</author>
		<version>1.0.0</version>
	</header>
	
	<screentext>
		<section id="testSection">
			
			<term id="testTerm">
				This is a term.
			</term>
			
			<!-- add more here -->

			<expression id="testExpression">
				<style class="H1">This is a Header.</style> And this an expression text. You can use RTF here, e.g. you can make this <b>bold</b>, <i>italic</i> or <b><i>both nested</i></b>. <color value="red">Colors</color> work too, as well as <size value="30">different</size> <size value="50">sizes.</size> With the id attribute you can identify this expression from the corresponding STMLExpression-object via the overload "STMLExpression GetExpression(string id)".
			</expression>
			
			<expression style ="Highlighted">
				Use the optional style-attribute to style the whole expression with a style from your style sheet. This is a reference: <ref document="otherDoc" section="otherSec" term="otherTerm"></ref>
			</expression>
			
			<expression narrator="A">
				Use the attribute "narrator", if your text is spoken by a character to give this document a more script-like vibe and you know who says what. If you use `STMLExpression.GetFormattedText(true)`, you can define an own style in your style sheet named after your narrator (in this case "A") and each expression of this narrator will be formatted in that style.
			</expression>
		
			<expression narrator="B" style="Shout">
				You can also use the optional style attribute to give narrator expressions a special style. It's nested inside the narrator style, so use this for special occasions like shouting, whispering and so on.
			</expression>
			
			<!-- add more here -->
		</section>
	
		<!-- add more here -->
	</screentext>
</root>

